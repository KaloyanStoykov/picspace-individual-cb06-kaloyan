plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
	id "org.sonarqube" version "4.2.1.3168"
}

group = 'com.picspace'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

sonar {
	properties {
		property "sonar.projectKey", "I507612_picspace-individual-cb06-kaloyan_AYu4f98zhZhNFmKffsh9"
		property "sonar.projectName", "PicSpace - Individual - CB06 - Kaloyan"
		property "sonar.qualitygate.wait", true
        property "sonar.coverage.exclusions", ["**/src/main/java/com/picspace/project/configuration/**",
                                               "**/src/main/java/com/picspace/project/controller/**",
                                               "**/src/main/java/com/picspace/project/domain/**",
                                               "**/src/main/java/com/picspace/project/filters/**",
                                               "**/src/main/java/com/picspace/project/persistence/**"]
	}
}



configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains:annotations:24.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // JJWT API
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    // JJWT Implementation
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    // JJWT Jackson Integration
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'mysql:mysql-connector-java:8.0.33'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.testng:testng:7.1.0'
    compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
    finalizedBy jacocoTestReport

}


jacoco {
    toolVersion = "0.8.9"

}

jacocoTestReport {
    dependsOn test
    reports{
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule{
            limit{
                minimum = 0.5
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']
        }
    }
}


tasks.named('sonarqube').configure {
	dependsOn test
}